/*Given a string, return all strings that can be generated by changing case of one or more letters in it.*/

#include <iostream>
#include <vector>
#include <string>

using namespace std;
void string_permutations(string &s, int i, vector<char> &ch, vector<string> &result)
{
    if (ch.size() == s.size())
    {
        string str(ch.begin(), ch.end());
        result.push_back(str);
    }
    else
    {
        if (isdigit(s[i]))
        {
            ch.push_back(s[i]);
            string_permutations(s, i + 1, ch, result);
            ch.pop_back();
        }
        else
        {
            ch.push_back(tolower(s[i]));
            string_permutations(s, i + 1, ch, result);
            ch.pop_back();
            ch.push_back(toupper(s[i]));
            string_permutations(s, i + 1, ch, result);
            ch.pop_back();
        }
    }
}

vector<string> letter_case_permutations(string &s)
{
    // Write your code here.
    vector<string> strs;
    vector<char> ch;

    string_permutations(s, 0, ch, strs);

    return strs;
}

int main()
{
    string s = "a1b2";
    vector<string> result;

    result = letter_case_permutations(s);

    for (auto it = result.begin(); it != result.end(); it++)
    {
        cout << *it << "\t";
    }
    return 0;
}