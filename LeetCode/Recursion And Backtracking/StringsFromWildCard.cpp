/*You are given string s of length n, having m wildcard characters '?', where each wildcard character represents a single character. Write a program which returns a list of all possible distinct strings that can be generated by replacing each wildcard character in s with either '0' or '1'.

Any string returned must not contain '?' characters, all must be replaced with either '0' or '1'.*/

#include <iostream>
#include <string>
#include <vector>
#include <algorithm>

using namespace std;

void all_strings(string &s, int i, vector<char> &temp, vector<string> &final)
{
    if (i == s.size())
    {
        string str(temp.begin(), temp.end());
        final.push_back(str);
        return;
    }
    if (isalnum(s[i]))
    {
        temp.push_back(s[i]);
        all_strings(s, i + 1, temp, final);
        temp.pop_back();
    }
    else
    {
        temp.push_back('1');
        all_strings(s, i + 1, temp, final);
        temp.pop_back();
        temp.push_back('0');
        all_strings(s, i + 1, temp, final);
        temp.pop_back();
    }
    return;
}

vector<string> find_all_possibilities(string &s)
{
    // Write your code here.
    vector<string> final;
    vector<char> temp;

    all_strings(s, 0, temp, final);
    return final;
}

int main()
{
    string s{"1?0?"};

    vector<string> result;

    result = find_all_possibilities(s);

    for (auto it = result.begin(); it != result.end(); it++)
        cout << *it << endl;

    return 0;
}